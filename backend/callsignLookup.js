import { parseStringPromise } from 'xml2js';
import mysql from 'mysql2/promise';

const username = 'AE9S';
const password = 'qweQWE123%21%40%23';

//const callsignToLookup = 'ae9s';
//const callsignToLookup = 've3rjb';


const callsignsToLookup = [
  'N6YOX', 
  'W7FE', 
  'JA7QVI', 
  'AC5S', 
  'N4SJW', 
  'K1REF', 
  'KA5GCB', 
  'W8UM', 
  'WX9LOT', 
  'W0C', 
  'KL7LT', 
  'AL4I', 
  'WW2OK', 
  'KC9PXJ', 
  'KG5BJF', 
  'AA5LT', 
  'NI8C', 
  'KG7TXP', 
  'N4HQT', 
  'W6DZN', 
  'W3VVV', 
  'K7BIT', 
  'KG6RWF', 
  'CO8LY', 
  'KA6QDE', 
  'JA3BOA', 
  'VE3POK', 
  'K9RNI', 
  'N9RSY', 
  'W7MCK', 
  'W6SDO', 
  'KG7KCV', 
  'WK7B', 
  'W1JTS', 
  'KD0QIV', 
  'K5YPY', 
  'W3AXL', 
  'KA2FPZ', 
  'W2GOR', 
  'W3HVY', 
  'KE5GGY', 
  'WA4YPN', 
  'W5CCT', 
  'WD4AVD', 
  'C6AJB', 
  'KG4YTP', 
  'VA7WPN', 
  'VE6HII', 
  'KC0MQS', 
  'K5MIX', 
  'KD2IWN', 
  'W5YTT', 
  'KF5JEH', 
  'K5ACR', 
  'V31MA', 
  'CO6YAC', 
  'XE3N', 
  'LU1VOF', 
  'FY5KE', 
  'AF1T', 
  'NY6DX', 
  'K2JMY', 
  'W1ASB', 
  'WA1ZAM', 
  'WB2TQE', 
  'N4BRJ', 
  'W1CTN', 
  'K4PZC', 
  'W1TJL', 
  'N1GKX', 
  'K1WHS', 
  'ZY5A', 
  'WL7F', 
  'KJ4ZMV', 
  'CO6LC', 
  'KJ4QHL', 
  'KT4Q', 
  'N4ALN', 
  'T42A', 
  'ZF1A', 
  'W8PR', 
  'KP4RV', 
  'VE1JS', 
  'WB9Z', 
  'TG9IIN', 
  'W1SJ', 
  'PP5JD', 
  'CA7CAQ', 
  'KH2L', 
  'VP8LP', 
  'CX2TQ', 
  'KE0EJF', 
  'XM7100AS', 
  'KE3JP', 
  'KK4TDP', 
  'I2VRN', 
  'DJ90IARU', 
  'YY6SEW', 
  'CO90IARU', 
  'PV8AL', 
  'PP5EI', 
  'CX2DA', 
  'CM3OP', 
  'PU1MHZ', 
  'XE1CQ', 
  'YV4CEG', 
  'JE1RXJ', 
  'C5YK', 
  'J79WTA', 
  '8P6ET', 
  'F4GYM', 
  'LU5EOI', 
  'PY4NY', 
  'PU2WDX', 
  '8P9JB', 
  'CA3LMO', 
  'P490IARU', 
  'PZ5RA', 
  'PY1AX', 
  'XE2G', 
  'LU4VL', 
  'ZS3D', 
  'ZS6CCY', 
  'AF4NO', 
  'WE0J', 
  'G1VGT/W0', 
  'AD0CV', 
  'K5KNM', 
  'ZD7FT', 
  'LU1HZY', 
  '9Y4D', 
  'YY4TSS', 
  'IK4GRO', 
  'FG5GP', 
  'PY2CAT', 
  'PU2YZP', 
  'CE2SQE', 
  'NH7AA', 
  '4V1TL', 
  'W4DEP', 
  'K6EC', 
  'KQ4ZN', 
  'WB9JOX', 
  'XR400AA', 
  'WL7DN', 
  'VE7AQA', 
  'CE1OEB', 
  'J66CE', 
  '8R1AK', 
  'LU1ZI', 
  'ZF2PG', 
  'F6FYD', 
  'EA3JE', 
  'YY5EMW', 
  'LU1FM', 
  'PJ2/K8ND', 
  'K7B', 
  'XR4SURF', 
  'WP4U', 
  'YV5PM', 
  'YV5TNT', 
  'DG6SA', 
  'KP3ZE', 
  'YY8HBO', 
  'TI5/N3KS', 
  'LU5FF', 
  'YV1CTE', 
  'PY2ZD', 
  'PY2VI', 
  'PY2EL', 
  'XE1XR', 
  '7L4LKK', 
  'PY2XV', 
  'W4KZ', 
  'CE3CT', 
  'PJ2T', 
  'PY2BK', 
  'PS2T', 
  'P40L', 
  'JI1ICF', 
  'CT1BOL', 
  'P40M', 
  'XE2ST', 
  'ZW8T', 
  'HI3K', 
  'CR2X', 
  'PJ4G', 
  'RZ9U', 
  'YV1KK', 
  'HI8JSG', 
  'RT0F', 
  'C6ANA', 
  'TO5A', 
  'JA7ZFN', 
  'CO2GG', 
  'TM6M', 
  'S57AL', 
  'II2S', 
  'HB2T', 
  'DR1D', 
  'KH6J', 
  'KH7BB', 
  'PT7ZT', 
  'EA8DO', 
  'HR2WW', 
  'KH6RS', 
  'LO7H', 
  'TG9ANF', 
  'HC5VF', 
  'LT1F', 
  'PY8WW', 
  'XQ3PC', 
  'ZP6A', 
  'CO2II', 
  '9A1A', 
  'IR4X', 
  'OK7W', 
  'TO66R', 
  'YV1AVO', 
  'D4C', 
  'PZ5W', 
  'MD3A', 
  'N1UR', 
  'II9P', 
  'MI0SMK', 
  'TI5W', 
  '6Y6Y', 
  'CE2MVF', 
  'JA2ODB', 
  'RW0BG', 
  'KP2M', 
  'CS2C', 
  'KL7SB', 
  '9A7V', 
  'SP8K', 
  'PR7AP', 
  '6Y1LZ', 
  'PR5D', 
  'OK1GTH', 
  'YN5Z', 
  'OA4SS', 
  'PY1GQ', 
  'PY5FO', 
  'JA3YBK', 
  'SN8B', 
  'YB6BXN', 
  'HK1NA', 
  'PY5IN', 
  'S58M', 
  'UI2K', 
  '9A1P', 
  'IO5O', 
  '9A3TR', 
  'S54ZZ', 
  'EU1A', 
  'EW2W', 
  'EI1Y', 
  'HG7T', 
  'PI4DX', 
  'LY2W', 
  'UT5M', 
  'RV3FF', 
  'SO9T', 
  'OK1CID', 
  'UI5R', 
  'HB9AUS', 
  '5Q2J', 
  'SP9KR', 
  'OK7Z', 
  'DL5JS', 
  'OH2BAH', 
  'NP2P', 
  'XE2AU', 
  'ZS6CYY', 
  'OK1CF', 
  'E51DLD', 
  'ZL1KEN', 
  'I4LEC', 
  'OH2BH', 
  'WX1S', 
  'NE1QP', 
  'W1XX', 
  'CF3SZ', 
  'KC4TVZ', 
  'XE1NVA', 
  'K7CAR', 
  'W5IFN', 
  'KB5TXS', 
  'W6AFA', 
  'EA8AM', 
  'CP5HK', 
  'HP1ELV', 
  'R4FBH', 
  'XE1RK', 
  'W0ZSW', 
  'HA8RM', 
  'KY4DWS', 
  'KF5QYG', 
  'W6P', 
  'W5RJR', 
  'V31XT', 
  'WA2NYC', 
  'N6HU', 
  'W6T', 
  'W6G', 
  'CE7VP', 
  'W6M', 
  'LU7YZ', 
  'R5AJ', 
  'N2NWK', 
  'VE5VK', 
  'CE2YWW', 
  'CA3VAK', 
  'KC0ECQ', 
  'TI2MOT', 
  'W6I', 
  'CT9/UR9IDX', 
  'K4MIA/7', 
  'W6K', 
  'W6F', 
  'UN6LN', 
  'W6A', 
  'W6U', 
  'KE5ET', 
  'E750ESP', 
  'K5LGX', 
  'W6E', 
  'W7BJN', 
  'K0INR', 
  'K5CWW', 
  'N5IT', 
  'PY2JY', 
  'CE3KEY', 
  'AD5MD', 
  'W9AV', 
  'W5LST', 
  'W7DG', 
  'N0MA', 
  'VE3GKT', 
  'CU2ARA', 
  'KH6WI', 
  'PY3PA', 
  'K3SDM', 
  'CE3WB', 
  'VE5YAK', 
  'PY6FP', 
  'W9LW', 
  'N1O', 
  'N0GJW', 
  'AB2FI', 
  'N6OKU', 
  'KC2MIB', 
  'TI2JS', 
  'K0PZH', 
  'VK4VW', 
  'KJ7QPD', 
  'RA3RCL', 
  'RL3DX', 
  'SM5CAK', 
  'PI4COM', 
  '4U1A', 
  'D01KRT', 
  '5W0LM', 
  'PY2BN', 
  'PV2G', 
  'PT5J', 
  'OK5D', 
  'TI1E', 
  'TM2T', 
  'PJ4DX', 
  'OM2VL', 
  'IK4LZH', 
  '4A7T', 
  '9A0BB', 
  '4A7L', 
  'PY2TOP', 
  'TI1Z', 
  'PY4JW', 
  'CR3DX', 
  'ZW2T', 
  'CN3A', 
  'ZF2B', 
  'NP2X', 
  'PV2K', 
  'CB3R', 
  'PX2A', 
  'LU1WCL', 
  'J62K', 
  'LP1H', 
  'LV8V', 
  'TM0T', 
  'PP5KW', 
  'V31XX', 
  'HQ9A', 
  'TO7K', 
  'VO1GRC', 
  'P40W', 
  'PR1T', 
  'EA1DR', 
  'VE2HTC', 
  'VA7BEC', 
  'VE7DX', 
  'TI7W', 
  'CR6K', 
  'CT3KN', 
  'PP4T', 
  'CO8ZZ', 
  'KP4PR', 
  'XE1CKJ', 
  'LS2D', 
  'PY4WWW', 
  'AZ6H', 
  '3G1B', 
  'CE6CGX', 
  'HH2AA', 
  'PZ5CO', 
  'EA8RM', 
  'W1AW/7', 
  'OA4DVC', 
  'AC1PI', 
  'CE3LMO', 
  'AC9BJ', 
  'KE4Q', 
  'KC4BB', 
  'K9DEG', 
  'KG9JP', 
  'KF9R', 
  'KO4GAR', 
  'VA5MUD', 
  'WA6QXA', 
  'WQ9V', 
  'KJ4WM', 
  'W4YS', 
  'W0YKS', 
  'KW5CW', 
  'KB4JOY', 
  'K4TDI', 
  'KN4IUV', 
  'WQ0A', 
  'W6PZA', 
  'K5MEC', 
  'AD0WN', 
  'KB8UEY', 
  'AB8AS', 
  'WA7WJR', 
  'KN6STX', 
  'K0OE', 
  'KN4AL', 
  'W7RTA', 
  'WA7RAR', 
  'WA7FLY', 
  'KL4RL', 
  'W1AZZ', 
  'VA3DPZ', 
  'AE0DC', 
  'N3KAE', 
  'KC5PLI', 
  'W5BAM', 
  'KI5TXY', 
  'KJ5BAW', 
  'KF6IDK', 
  'K3KKI', 
  'N0VPN', 
  'W0P/2', 
  'AG7FU', 
  'KD9VUW', 
  'W2SMF', 
  'KI5ZDQ', 
  'K8JOK', 
  'K9QCA', 
  'N4SAX', 
  'N6LY', 
  'N0YPA', 
  'K9ABR', 
  'VA3HES', 
  'KJ7CWE', 
  'AG7DF', 
  'W5LNX', 
  'KY4KP', 
  'KO4NDP', 
  'K7UAP', 
  'K7HDX', 
  'KI5MBO', 
  'KN4RNO', 
  'W9UPK', 
  'N4LEQ', 
  'KF5QDX', 
  'AD0DB', 
  'W0YEM', 
  'KB5UTY', 
  'W8DF', 
  'KE8DW', 
  'KE8UJJ', 
  'N2AKJ', 
  'K1XD', 
  'W9BDX', 
  'N5LNK', 
  'KB0OWD', 
  'KK7MWI', 
  'KE8QLG', 
  'KE8YGW', 
  'AE3NE', 
  'K7FC', 
  'KI5WWT', 
  'N8XTZ/VE4', 
  'KI5GNH', 
  'N4ATJ', 
  'KQ4GPT', 
  'KD9TTB', 
  'N9FAL', 
  'W6PUG', 
  'K7EVM', 
  'WC0O', 
  'N5FFN', 
  'VA3NPW', 
  'NW4TF', 
  'K4LBL', 
  'KN4NGK', 
  'AD9BL', 
  'WB9EWJ', 
  'KD7DPS', 
  'W4WJE', 
  'VA3GHB', 
  'VA3MPJ', 
  'KJ7BES', 
  'N8LH', 
  'KE8PZN', 
  'KD0OIX', 
  'K7GDR', 
  'KE4LPL', 
  'WX8J', 
  'KE7NLU', 
  'KK7CJV', 
  'NF6P', 
  'KD9WFF', 
  'KE8SZL', 
  'W0MBA', 
  'W0CBP', 
  'NW9F', 
  'K6ATY', 
  'KF8IV', 
  'K8MRD', 
  'N4LDB', 
  'KD9INK', 
  'KI5GTR', 
  'K9UOK', 
  'KE8UTX', 
  'VA7BIX', 
  'W9JP/20', 
  'KF0CZD', 
  'KE0YBL', 
  'AJ4FF', 
  'WD5JR', 
  'N5VOF', 
  'KN6GWT', 
  'KJ4UGO', 
  'WA7BAM', 
  'AA4SS', 
  'KM4KDF', 
  'N5EST', 
  'KJ5W', 
  'KD7WNV', 
  'W5MVD', 
  'KC3NI', 
  'KG5FS', 
  'KN4NBJ', 
  'KK7NLA', 
  'WB0RUR', 
  'W0DY', 
  'KD9DZT', 
  'KB3CMT', 
  'W5O', 
  'W7ATP', 
  'WI0O', 
  'K0OTC', 
  'VA7VZ', 
  'W5R', 
  'KG6NLW', 
  'WU1Q', 
  'KK7BKH', 
  'KM5RF', 
  'WF9N', 
  'AC9OT', 
  'W5JBF', 
  'NN8M', 
  'KQ4CTD', 
  'KB4LOA', 
  'N9WPY', 
  'KU8V', 
  'AE0LZ', 
  'KE8VOL', 
  'VE7DFZ', 
  'K8ROY', 
  'KK4OVW', 
  'K7CAN', 
  'W2BY', 
  'K0BBC', 
  'KB0TYJ', 
  'AG5CC', 
  'K4COP', 
  'KE8OXZ', 
  'N7BBQ', 
  'N9DEK', 
  'K5MPD', 
  'N9NFT', 
  'K0LAF', 
  'N0ING', 
  'WE9O', 
  'KD9MYG', 
  'KD9NJJ', 
  'KB4QXI', 
  'AF4XL', 
  'KI6FYQ', 
  'WA6OEM', 
  'KD4BVG', 
  'KC2VTM', 
  'K2MFR', 
  'KN4COE', 
  'KI5ZXD', 
  'N3DRK', 
  'KC1QDZ', 
  'K7RCR', 
  'VE6LK', 
  'N9ITB', 
  'W0HL', 
  'WJ1S', 
  'KI5ZAZ', 
  'KD5UYZ', 
  'AE5MU', 
  'KD9QOB', 
  'K4YWE', 
  'VE5REV', 
  'VE5DMP', 
  'N1CCC', 
  'W9CPL', 
  'NQ8M', 
  'KI5RLZ', 
  'W5LIC', 
  'NL7GN', 
  'WD9GCO', 
  'KC1RQH', 
  'W1IX', 
  'KM4RJF', 
  'KF5UPM', 
  'AD8MP', 
  'N3NIK', 
  'KD5JGD', 
  'W9FFF', 
  'KK6WT', 
  'KC0OIO', 
  'N9EYO', 
  'KD5DX', 
  'KJ5AJG', 
  'K5EC', 
  'N3WPA', 
  'W5HRP', 
  'KZ4BK', 
  'KJ6VCF', 
  'KF0LZX', 
  'KB9OWD', 
  'KF0NZH', 
  'NB5T', 
  'WV4AS', 
  'KO4ZRX', 
  'KE4JT', 
  'KE8YWM', 
  'N6TJL', 
  'K7HTM', 
  'KD9MSP', 
  'KD9SZN', 
  'W3JPH', 
  'WB4JIM', 
  'KO4SCS', 
  'W4LMY', 
  'KF0NXT', 
  'N2AMY', 
  'KJ8MRH', 
  'KO4VYT', 
  'W9FAA', 
  'W9GOT', 
  'K3STL', 
  'KE5RLP', 
  'K5OGR', 
  'K8REE', 
  'W6TPB', 
  'WB9AUV', 
  'K9OL', 
  'AI5DN', 
  'VE3RGO', 
  'K4EPH', 
  'N1SPW', 
  'KC7TAK', 
  'W7TEE', 
  'KN6ZAT', 
  'W2T', 
  'K1VHZ', 
  'WA3LTJ', 
  'KB9KHT', 
  'NX9T', 
  'WB4E', 
  'K2P', 
  'KX5JT', 
  'N4TRD', 
  'KT4EM', 
  'AD9CC', 
  'KC3MVS', 
  'KM7TAM', 
  'N5KWD', 
  'KM0JPR', 
  'W9AKO', 
  'W7GNM', 
  'KL7DUG', 
  'KG7VLX', 
  'KB1ICL', 
  'N6VHF', 
  'KD9YOD', 
  'K3KLB', 
  'W1RPQ', 
  'KB9VBR', 
  'N4GAS', 
  'KC3SEG', 
  'K3FAZ', 
  'K5TAO', 
  'AI5NQ', 
  'W6IKE', 
  'K6RJF', 
  'KK7GWX', 
  'KF4TCV', 
  'W8APS', 
  'KI5RHS', 
  'W0YR', 
  'W4DEG', 
  'WD6UCK', 
  'KY4BX', 
  'W4ILJ', 
  'K7SPR', 
  'AD0AA', 
  'W0OXB'  
];

const dbConfig = {
  host: '192.168.1.85',
  user: 'testUser',
  password: 'password1',
  database: 'HamLogDB'
};

async function loginAndGetCallsignInfo() {
  let connection;

  try {
    connection = await mysql.createConnection(dbConfig);

    const loginUrl = `https://www.hamqth.com/xml.php?u=${username}&p=${password}`;
    const loginResponse = await fetch(loginUrl);
    const loginData = await loginResponse.text();

    // Parse the XML response to get the session ID
    const loginDataParsed = await parseStringPromise(loginData);
    const sessionId = loginDataParsed?.HamQTH?.session?.[0]?.session_id?.[0];

    if (!sessionId) {
      console.log('No session ID found. Check login credentials.');
      return;
    }


    for (const callsignToLookup of callsignsToLookup) {
      const lookupUrl = `https://www.hamqth.com/xml.php?id=${sessionId}&callsign=${callsignToLookup}&prg=your_program_name`;
      const lookupResponse = await fetch(lookupUrl);
      const lookupData = await lookupResponse.text();
  
      // Parse the XML response for the callsign lookup
      const lookupDataParsed = await parseStringPromise(lookupData);
      const callsignInfo = lookupDataParsed?.HamQTH?.search?.[0];
  
      // Extracting specific details from the callsign lookup response
      
      const qth = callsignInfo?.qth?.[0] || "unknown";
      const country = callsignInfo?.country?.[0] || "unknown";
      const itu = callsignInfo?.itu?.[0] || "unknown";
      const grid = callsignInfo?.grid?.[0] || "unknown";
      const adrName = callsignInfo?.adr_name?.[0] || "unknown";
      const adrStreet1 = callsignInfo?.adr_street1?.[0] || "unknown";
      const adrCity = callsignInfo?.adr_city?.[0] || "unknown";
      const adrCountry = callsignInfo?.adr_country?.[0] || "unknown";
      const latitude = callsignInfo?.latitude?.[0] || "";
      const longitude = callsignInfo?.longitude?.[0] || "";
  
      /*
      console.log('Callsign: ', callsignToLookup);
      console.log('Address Name:', adrName);
      console.log('Address Street:', adrStreet1);
      console.log('City:', adrCity);
      console.log('Address Country:', adrCountry);
      console.log('Latitude:', latitude);
      console.log('Longitude:', longitude);
      console.log('ITU Zone:', itu);
      console.log('Grid Square:', grid);
      console.log('QTH:', qth);
      console.log('Country:', country);
      */

      // Check if the callsign is already in the database
      const checkSql = `SELECT COUNT(*) AS count FROM ContactInfo WHERE ContactInfo_Callsign = ?`;
      const [checkResults] = await connection.execute(checkSql, [callsignToLookup]);
  
      if (checkResults[0].count > 0) {
        console.log(`Callsign ${callsignToLookup} already exists in the database.`);
        //return; // Exit the function if the callsign exists
      } else {
        // Assuming auto_increment is enabled for ContactInfo_ID, it's omitted from the INSERT statement
        const insertSql = `
          INSERT INTO ContactInfo (ContactInfo_Callsign, ContactInfo_Name, ContactInfo_Street, ContactInfo_City, ContactInfo_AddressCountry, ContactInfo_Latitude, ContactInfo_Longitude, ContactInfo_ITUZone, ContactInfo_GridSquare, ContactInfo_QTH, ContactInfo_Country)
          VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
        `;
        const insertValues = [
          callsignToLookup.toUpperCase(),
          adrName,
          adrStreet1,
          adrCity,
          adrCountry,
          latitude,
          longitude,
          itu,
          grid,
          qth,
          country
        ];
  
        await connection.execute(insertSql, insertValues);
        console.log('Record inserted successfully - ' + callsignToLookup);
      }
    }
  } catch (error) {
    console.error('Error during HamQTH callsign lookup:', error);
  } finally {
    if (connection) {
      await connection.end();
    }
  }
}

loginAndGetCallsignInfo();